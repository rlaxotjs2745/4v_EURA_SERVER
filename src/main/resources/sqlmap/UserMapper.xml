<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eura.web.model.UserMapper">
    <select id="getUserInfoById" parameterType="String" resultType="com.eura.web.model.DTO.UserVO">
        SELECT * FROM TB_USER WHERE user_id=#{user_id}
    </select>

    <select id="getUserInfoByIdx" resultType="com.eura.web.model.DTO.UserVO">
        SELECT * FROM TB_USER WHERE IDX_USER=#{idx_user}
    </select>

    <select id="getAuthUser" resultType="com.eura.web.model.DTO.UserVO">
        SELECT * FROM TB_USER WHERE user_id=#{user_id} AND user_pwd=#{user_pwd}
    </select>

    <select id="getUserInfoByNameAndMPhoneNum" parameterType="hashmap" resultType="com.eura.web.model.DTO.UserVO">
        SELECT * FROM TB_USER WHERE USER_NAME=#{user_name} AND USER_PHONE=#{user_phone}
    </select>

    <select id="getAllUserList" resultType="com.eura.web.model.DTO.UserVO">
        SELECT * FROM TB_USER;
    </select>

    <select id="getUserSpecialInfoPagingList" parameterType="hashmap" resultType="com.eura.web.model.DTO.PagedUserListVO">
        SELECT
            user_id
            ,user_name
            ,mphone_num
        FROM (
            SELECT ROW_NUMBER() OVER(ORDER by #{order_field} DESC) AS row_num
                ,user_id
                ,user_name
                ,mphone_num
            FROM TB_USER
            WHERE ROWNUM <![CDATA[<=]]> #{page_num}*#{amount}
        )
        WHERE row_num <![CDATA[>]]> (#{page_num} -1)*#{amount}
    </select>

    <select id="getUserPagingList" parameterType="hashmap" resultType="com.eura.web.model.DTO.UserVO">
        SELECT
            *
        FROM (
            SELECT ROW_NUMBER() OVER(ORDER by #{order_field} DESC) AS row_num
                t.*
            FROM TB_USER t
            WHERE ROWNUM <![CDATA[<=]]> #{page_num}*#{amount}
        )
        WHERE row_num <![CDATA[>]]> (#{page_num} -1)*#{amount}
    </select>

    <select id="getUserCount" parameterType="Integer" resultType="Integer">
        SELECT COUNT(*) FROM TB_USER
        <if test='user_type != 99'> WHERE USER_TYPE = #{user_type}</if> ;
    </select>

    <insert id="insertUserInfo" parameterType="com.eura.web.model.DTO.UserVO">
        INSERT INTO TB_USER (
            USER_NAME,
            USER_ID,
            USER_PWD,
            USER_PHONE,
            PRIVACY_TERMS,
            SERVICE_USE_TERMS,
            PROFILE_Y
        ) VALUES (
            #{user_name},
            #{user_id},
            #{user_pwd},
            #{user_phone},
            #{privacy_terms},
            #{service_use_terms},
            #{profile_y}
        )
    </insert>

    <update id="updateUserInfo" parameterType="com.eura.web.model.DTO.UserVO">
    </update>

    <update id="updateUserInfoForLogout" parameterType="string">
        UPDATE TB_USER
        SET
            LAST_UPD_DATE = SYSDATE
        WHERE USER_ID=#{user_id}
    </update>

    <delete id="deleteUserInfoByID" parameterType="string">
        DELETE TB_USER WHERE USER_ID = #{user_id}
    </delete>

    <delete id="deleteUserInfoByIdx" parameterType="long">
        DELETE TB_USER WHERE IDX_USER = #{idx_user}
    </delete>

    <select id="selectUserProfileFile" resultType="com.eura.web.model.DTO.UserVO">
        SELECT *
        FROM TB_USER
        WHERE IDX_USER = #{idx_user}
    </select>

    <!-- 프로필 사진 추가여부 설정 -->
    <update id="setProfile_y" parameterType="com.eura.web.model.DTO.UserVO">
        UPDATE TB_USER
        SET
            PROFILE_Y = #{profile_y}
        WHERE IDX_USER=#{idx_user}
    </update>

    <!-- authKey키 생성(가입인증 번호 발급) -->
    <update id="updateAuthKey" parameterType="com.eura.web.model.DTO.UserVO">
        UPDATE TB_USER
        SET
            AUTHKEY = #{authKey}
        WHERE IDX_USER=#{idx_user}
    </update>

    <!-- 회원상태 변경(가입인증 메일 확인) -->
    <update id="updateAuthStatus" parameterType="com.eura.web.model.DTO.UserVO">
        UPDATE TB_USER
        SET
            USER_STATUS = 1
        WHERE USER_ID = #{user_id}
            AND AUTHKEY = #{authKey}
    </update>

    <select id="findUserIdx" resultType="long">
        SELECT idx_user FROM TB_USER WHERE user_id=#{user_id}
    </select>

    <!--임시 비밀번호 발급 -->
    <update id="updateUserPw" parameterType="com.eura.web.model.DTO.UserVO">
        UPDATE TB_USER
        SET
            TEMP_PW_Y = #{temp_pw_y},
            TEMP_PW = #{temp_pw},
            TEMP_PW_ISSUE_DT = #{temp_pw_issue_dt}
        WHERE IDX_USER=#{idx_user}
    </update>
</mapper>