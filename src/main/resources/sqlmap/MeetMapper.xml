<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eura.web.model.MeetMapper">
    <!-- 미팅룸 리스트 -->
    <select id="getMeetingList" resultType="com.eura.web.model.DTO.MeetingVO">
        SELECT * 
            FROM TB_MEETING 
            WHERE IDX_USER=#{idx_user} AND DELETE_STAT=0
            <if test="currentPage != null and currentPage > 0">
                LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
            </if>
    </select>

    <!-- 개인화 - 다음일정 - 참여중인 미팅룸 -->
    <select id="getMyMeetShortList" resultType="com.eura.web.model.DTO.MeetingVO">
        SELECT *
            FROM TB_MEETING
            WHERE DELETE_STAT=0 
                AND (IDX_USER=#{idx_user} OR IDX_MEETING IN (SELECT IDX_MEETING FROM TB_MEETING_USER_JOIN WHERE IDX_USER=#{idx_user} AND DELETE_STAT=0))
                AND MT_END_DT <![CDATA[>]]> NOW()
                AND MT_STATUS NOT IN (3,4)
            ORDER BY MT_START_DT
            LIMIT 3
    </select>

    <!-- 개인화 - 나의 미팅룸 - 참여중인 미팅룸 총 수 -->
    <select id="getMyMeetListCount" resultType="Long">
        SELECT COUNT(1)
            FROM TB_MEETING
            WHERE DELETE_STAT=0 
                AND (IDX_USER=#{idx_user} OR IDX_MEETING IN (SELECT IDX_MEETING FROM TB_MEETING_USER_JOIN WHERE IDX_USER=#{idx_user} AND DELETE_STAT=0))
                AND MT_END_DT <![CDATA[>]]> NOW()
                AND WHEN IDX_USER!=#{idx_user} THEN MT_STATUS NOT IN (3,4)
    </select>

    <!-- 개인화 - 나의 미팅룸 - 참여중인 미팅룸 -->
    <select id="getMyMeetList" resultType="com.eura.web.model.DTO.MeetingVO">
        SELECT A.*, B.USER_NAME
            FROM TB_MEETING A
            JOIN TB_USER B ON B.IDX_USER = A.IDX_USER
            WHERE A.DELETE_STAT=0 
                AND (A.IDX_USER=#{idx_user} OR A.IDX_MEETING IN (SELECT IDX_MEETING FROM TB_MEETING_USER_JOIN WHERE IDX_USER=#{idx_user} AND DELETE_STAT=0))
                AND A.MT_END_DT <![CDATA[>]]> NOW()
                AND WHEN IDX_USER!=#{idx_user} THEN MT_STATUS NOT IN (3,4)
            <if test="calYear != null">
                AND LEFT(A.MT_START_DT,4)=#{calYear}
            </if>
            <if test="calMonth != null">
                AND RIGHT(LEFT(A.MT_START_DT,7),2)=#{calMonth}
            </if>
            ORDER BY 
            <choose>
                <!-- pageSort - 1:최신순, 2:미팅 시간순, 3:비공개 미팅순, 4:취소된 미팅순 -->
                <!-- MT_STATUS - 0:비공개, 1:공개, 2:취소, 3:삭제 -->
                <when test="pageSort != null and pageSort == 1">
                    A.REG_DT DESC
                </when>
                <when test="pageSort != null and pageSort == 3">
                    FIELD(A.MT_STATUS, 0,1,2), A.MT_START_DT ASC
                </when>
                <when test="pageSort != null and pageSort == 4">
                    FIELD(A.MT_STATUS, 2,0,1), A.MT_START_DT ASC
                </when>
                <otherwise>
                    A.MT_START_DT ASC
                </otherwise>
            </choose>
            <if test="currentPage != null and currentPage > 0">
                LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
            </if>
    </select>

    <!-- 개인화 - 지난 미팅 -->
    <select id="getMyMeetEndList" resultType="com.eura.web.model.DTO.MeetingVO">
        SELECT A.*, B.USER_NAME
            FROM TB_MEETING A
            JOIN TB_USER B ON B.IDX_USER = A.IDX_USER
            WHERE A.DELETE_STAT=0 
                AND (A.IDX_USER=#{idx_user} OR A.IDX_MEETING IN (SELECT IDX_MEETING FROM TB_MEETING_USER_JOIN WHERE IDX_USER=#{idx_user} AND DELETE_STAT=0))
                AND A.MT_END_DT <![CDATA[<]]> NOW()
                AND WHEN IDX_USER!=#{idx_user} THEN MT_STATUS NOT IN (3,4)
            ORDER BY 
            <choose>
                <!-- 1:최신순, 2:미팅 시간순, 3:비공개 미팅순, 4:취소된 미팅순 -->
                <when test="pageSort != null and pageSort == 1">
                    A.REG_DT DESC
                </when>
                <when test="pageSort != null and pageSort == 3">
                    FIELD(A.MT_STATUS, 0,1,2,3), A.MT_START_DT ASC
                </when>
                <when test="pageSort != null and pageSort == 4">
                    FIELD(A.MT_STATUS, 2,3,0,1), A.MT_START_DT ASC
                </when>
                <otherwise>
                    A.MT_START_DT ASC
                </otherwise>
            </choose>
            LIMIT 8
    </select>

    <!-- 미팅룸 정보 -->
    <select id="getRoomInfo" resultType="com.eura.web.model.DTO.MeetingVO">
        SELECT * 
            FROM TB_MEETING 
            WHERE IDX_MEETING=#{idx_meeting} AND DELETE_STAT=0
    </select>

    <!-- 미팅룸 첨부 파일 리스트 -->
    <select id="getMeetFiles" resultType="com.eura.web.model.DTO.MeetingVO">
        SELECT * 
            FROM TB_ATTACHMENT_FILE_INFO_JOIN 
            WHERE IDX_MEETING=#{idx_meeting} AND DELETE_STAT=0
    </select>

    <!-- 미팅룸 참여자 리스트 -->
    <select id="getMeetInvites" resultType="com.eura.web.model.DTO.MeetingVO">
        SELECT A.*, IFNULL(B.USER_NAME,'') AS USER_NAME
            FROM TB_MEETING_USER_JOIN A 
                LEFT OUTER JOIN TB_USER B ON B.IDX_USER=A.IDX_USER
            WHERE A.IDX_MEETING=#{idx_meeting} AND A.DELETE_STAT=0
            <if test="currentPage != null and currentPage > 0">
                LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
            </if>
    </select>

    <!-- 미팅룸 생성 -->
    <insert id="meet_create" parameterType="com.eura.web.model.DTO.MeetingVO" useGeneratedKeys="true" keyColumn="idx_meeting" keyProperty="idx_meeting">
        INSERT INTO TB_MEETING (
            IDX_USER,
            MT_NAME,
            MT_START_DT,
            MT_END_DT,
            MT_INFO
        <if test="mt_remind_type != null">
            , MT_REMIND_TYPE
        </if>
        <if test="mt_remind_count != null">
            , MT_REMIND_COUNT
        </if>
        <if test="mt_remind_week != null">
            , MT_REMIND_WEEK
        </if>
        <if test="mt_remind_end != null">
            , MT_REMIND_END
        </if>
        ) VALUES (
            #{idx_user},
            #{mt_name},
            #{mt_start_dt},
            #{mt_end_dt},
            #{mt_info}
        <if test="mt_remind_type != null">
            , #{mt_remind_type}
        </if>
        <if test="mt_remind_count != null">
            , #{mt_remind_count}
        </if>
        <if test="mt_remind_week != null">
            , #{mt_remind_week}
        </if>
        <if test="mt_remind_end != null">
            , #{mt_remind_end}
        </if>
        )
    </insert>

    <!-- 참여자 리스트 저장 -->
    <insert id="meet_invite">
    <![CDATA[
		{call prc_meet_invite(#{idx_meeting}, #{user_email})}
	]]>
    </insert>

    <!-- 미팅룸 수정 -->
    <update id="meet_modify">
        UPDATE TB_MEETING 
            SET
                MT_NAME=#{mt_name},
                MT_START_DT=#{mt_start_dt},
                MT_END_DT=#{mt_end_dt},
                MT_INFO=#{mt_info}
            <if test="mt_remind_type != null">
                , MT_REMIND_TYPE=#{mt_remind_type}
            </if>
            <if test="mt_remind_count != null">
                , MT_REMIND_COUNT=#{mt_remind_count}
            </if>
            <if test="mt_remind_week != null">
                , MT_REMIND_WEEK=#{mt_remind_week}
            </if>
            <if test="mt_remind_end != null">
                , MT_REMIND_END=#{mt_remind_end}
            </if>
            WHERE IDX_MEETING=#{idx_meeting} AND IDX_USER=#{idx_user} AND DELETE_STAT=0
    </update>

    <!-- 미팅룸 참여자 삭제 -->
    <update id="meet_invite_del">
        UPDATE TB_MEETING_USER_JOIN 
            SET 
                DELETE_STAT=1, IS_LIVE=0, DEL_DT=NOW() 
            WHERE IDX_MEETING=#{idx_meeting} AND IDX_USER=#{idx_user}
    </update>

    <!-- 미팅룸 공개 -->
    <update id="putMeetOpen">
        UPDATE TB_MEETING
            SET
                MT_STATUS=1, IS_LIVE=0
            WHERE IDX_MEETING=#{idx_meeting} AND IDX_USER=#{idx_user} AND DELETE_STAT=0
    </update>

    <!-- 미팅룸 비공개 -->
    <update id="putMeetClose">
        UPDATE TB_MEETING
            SET
                MT_STATUS=0, IS_LIVE=0
            WHERE IDX_MEETING=#{idx_meeting} AND IDX_USER=#{idx_user} AND DELETE_STAT=0
    </update>

    <!-- 미팅 취소 -->
    <update id="putMeetCacncel">
        UPDATE TB_MEETING
            SET
                MT_STATUS=2, IS_LIVE=0
            WHERE IDX_MEETING=#{idx_meeting} AND IDX_USER=#{idx_user} AND DELETE_STAT=0
    </update>

    <!-- 미팅룸 삭제 -->
    <update id="deleteMeet">
        UPDATE TB_MEETING
            SET
                MT_STATUS=3, DELETE_STAT=1, DEL_DT=NOW()
            WHERE IDX_MEETING=#{idx_meeting} AND IDX_USER=#{idx_user}
    </update>

    <!-- 미팅 시작하기 -->
    <update id="putMeetLiveStart">
        UPDATE TB_MEETING
            SET
                IS_LIVE=1
            WHERE IDX_MEETING=#{idx_meeting} AND IDX_USER=#{idx_user}
    </update>

    <!-- 미팅 들어가기 -->
    <update id="putMeetLiveJoin">
        UPDATE TB_MEETING_USER_JOIN
            SET
                JOIN_DT=NOW(), TOKEN=#{token}, SESSIONID=#{sessionid}, IS_LIVE=0
            WHERE IDX_MEETING=#{idx_meeting} AND IDX_USER=#{idx_user}
    </update>

    <!-- 미팅에 참여중인지 확인 -->
    <select id="chkMeetLiveJoin" resultType="com.eura.web.model.DTO.MeetingVO">
        SELECT TOKEN, SESSIONID, IS_LIVE
            FROM TB_MEETING_USER_JOIN
            WHERE IDX_MEETING=#{idx_meeting} AND IDX_USER=#{idx_user} AND JOIN_DT IS NOT NULL
    </select>

    <!-- 미팅 시간 중복 체크 -->
    <select id="chkRoomDupTime" statementType="CALLABLE">
		{#{chkcnt} = call prc_meet_chkRoomDupTime(#{idx_meeting}, #{idx_user})}
    </select>
</mapper>