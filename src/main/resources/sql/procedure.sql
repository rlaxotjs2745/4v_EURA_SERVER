CREATE DEFINER=`euradb`@`%` PROCEDURE `eura_db`.`prc_meet_invite`(
	IN `_idx_meeting` INT,
	IN `_user_email` VARCHAR(400)
)
BEGIN
	DECLARE M_ERR INT DEFAULT 0;
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET M_ERR = -1;

	SET @IDXUSER = 0;
	IF EXISTS (SELECT IDX_USER FROM TB_USER WHERE USER_ID = _user_email) THEN
		SELECT IDX_USER INTO @IDXUSER FROM TB_USER WHERE USER_ID = _user_email;
	END IF;

	START TRANSACTION;

	IF NOT EXISTS(SELECT IDX_MEETING_USER_JOIN FROM TB_MEETING_USER_JOIN WHERE USER_EMAIL=_user_email AND IDX_MEETING=_idx_meeting AND DELETE_STAT=0) THEN
		INSERT INTO TB_MEETING_USER_JOIN (
            IDX_USER, IDX_MEETING, USER_EMAIL
        ) VALUES (
            @IDXUSER, _idx_meeting, _user_email
        );
    END IF;

   	IF M_ERR > 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;

END;$$
DELIMITER ;

CREATE DEFINER=`euradb`@`%` PROCEDURE `eura_db`.`prc_meet_chkRoomDupTime`(
	IN `_idx_meeting` INT,
	IN `_idx_user` INT
)
BEGIN
	SET @CNT = 0;
	SELECT MT_START_DT, MT_END_DT INTO @MTSTARTDT, @MTENDDT FROM TB_MEETING WHERE IDX_MEETING=_idx_meeting AND IDX_USER=_idx_user;
	SELECT COUNT(1) INTO @CNT FROM TB_MEETING WHERE IDX_USER=_idx_user AND DELETE_STAT=0 AND IS_FINISH=0 AND MT_STATUS=1 AND IDX_MEETING!=_idx_meeting
		AND ((MT_START_DT<=@MTSTARTDT AND MT_END_DT>@MTSTARTDT) OR (MT_START_DT<@MTENDDT AND MT_END_DT>=@MTENDDT));
	SELECT @CNT AS chkcnt;
END;$$
DELIMITER ;

CREATE DEFINER=`euradb`@`%` PROCEDURE `eura_db`.`prc_meet_chkRoomDupDate`(
	IN `_idx_user` INT,
	IN `_mt_start_dt` VARCHAR(20),
	IN `_mt_end_dt` VARCHAR(20),
	IN `_idx_meeting` INT
)
BEGIN
	SET @CNT = 0;
	IF _idx_meeting IS NOT NULL THEN
		SELECT MT_START_DT, MT_END_DT INTO @MTSTARTDT, @MTENDDT FROM TB_MEETING WHERE IDX_MEETING=_idx_meeting;
		IF @MTSTARTDT != _mt_start_dt AND @MTENDDT != _mt_end_dt THEN
			SELECT COUNT(1) INTO @CNT FROM TB_MEETING WHERE IDX_USER=_idx_user AND DELETE_STAT=0 AND IS_FINISH=0 AND MT_STATUS=1
				AND ((MT_START_DT<=_mt_start_dt AND MT_END_DT>_mt_start_dt) OR (MT_START_DT<_mt_end_dt AND MT_END_DT>=_mt_end_dt));
		END IF;
	ELSE
		SELECT COUNT(1) INTO @CNT FROM TB_MEETING WHERE IDX_USER=_idx_user AND DELETE_STAT=0 AND IS_FINISH=0 AND MT_STATUS=1
				AND ((MT_START_DT<=_mt_start_dt AND MT_END_DT>_mt_start_dt) OR (MT_START_DT<_mt_end_dt AND MT_END_DT>=_mt_end_dt));
	END IF;
	SELECT @CNT AS chkcnt;
END;$$
DELIMITER ;


DROP PROCEDURE IF EXISTS `prc_meet_analysis_user`;;
SET SESSION SQL_MODE="STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION";;
CREATE DEFINER=`euradb`@`%` PROCEDURE `prc_meet_analysis_user`(
	IN `_TOKEN` VARCHAR(2000),
	IN `_MCID` VARCHAR(20)
)
BEGIN
SET @GOOD = 0;
SET @BAD = 0;
SET @IDX_MEETING_USER_JOIN = 0;
SELECT IDX_MEETING_USER_JOIN INTO @IDX_MEETING_USER_JOIN FROM TB_MEETING_USER_JOIN WHERE TOKEN = _TOKEN AND SESSIONID = _MCID;

IF (SELECT COUNT(1) FROM TB_ANALYSIS_USER WHERE IDX_MEETING_USER_JOIN=@IDX_MEETING_USER_JOIN) > 0 THEN
SELECT COUNT(1), SUM(IF(ENGAGEMENT>=0.25,1,0)), SUM(IF(ENGAGEMENT<0.25,1,0)) INTO @CNT, @GOOD, @BAD FROM TB_ANALYSIS WHERE IDX_MEETING_USER_JOIN=@IDX_MEETING_USER_JOIN;
END IF;

IF NOT EXISTS(SELECT IDX_ANALYSIS_USER FROM TB_ANALYSIS_USER WHERE IDX_MEETING_USER_JOIN=@IDX_MEETING_USER_JOIN) THEN
INSERT INTO TB_ANALYSIS_USER (IDX_MEETING_USER_JOIN, GOOD, BAD) VALUES (@IDX_MEETING_USER_JOIN, @GOOD, @BAD);
ELSE
UPDATE TB_ANALYSIS_USER SET GOOD=@GOOD, BAD=@BAD WHERE IDX_MEETING_USER_JOIN=@IDX_MEETING_USER_JOIN;
END IF;
END;;